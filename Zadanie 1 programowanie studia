#1
def str_length(str1):
    count = 0
    for char in str1:
        count += 1
    return count
print(str_length('test'))

#2
def char_frequency(str1):
    freq = {}
    for n in str1:
        keys = freq.keys()
        if n in keys:
            freq[n] += 1
        else:
            freq[n] = 1
    return freq
print(char_frequency('facebook.com'))

#3
def string_ends(str):
    if len(str) < 2:
        return ''
    return str[0:2] + str[-2:]
print(string_ends('wsb.pl'))
print(string_ends('mn'))
print(string_ends('M'))

#4
def change_char(str1):
    char = str1[0]
    str1 = str1.replace(char, '$')
    str1 = char + str1[1:]
    return str1
print(change_char('test'))

#5
def chars_mix(a, b):
    new_a = b[:2] + a[2:]
    new_b = a[:2] + b[2:]
    return new_a + ' ' + new_b
print(chars_mix('abc', 'xyz'))

#6
def add_string(str1):
    length = len(str1)
    if length > 2:
        if str1[-3:] == 'ing':
            str1 += 'ly'
        else:
            str1 += 'ing'
    return str1
print(add_string('MN'))
print(add_string('wsb'))
print(add_string('testing'))

#7
def not_poor(str1):
    snot = str1.find('not')
    spoor = str1.find('poor')
    if spoor > snot and snot > 0 and spoor > 0:
        str1 = str1.replace(str1[snot:(spoor+4)], 'good')
        return str1
    else:
        return str1
print(not_poor('The lyrics is not that poor!'))
print(not_poor('The lyrics is poor!'))

#8
def find_longest_word(words_list):
    word_len = []
    for n in words_list:
        word_len.append((len(n), n))
    word_len.sort()
    return word_len[-1][0], word_len[-1][1]
result = find_longest_word(["Python", "Java", "C++"])
print("\nLongest word: ", result[1])
print("Length of the longest word: ", result[0])

#9
def remove_char(str, n):
    first_part = str[:n]
    last_part = str[n+1:]
    return first_part + last_part
print(remove_char('Python', 1))
print(remove_char('Python', 4))
print(remove_char('Python', 2))

#10
def change_string(str1):
    return str1[-1:] + str1[1:-1] + str1[:1]
print(change_string('Python'))
print(change_string('04032003'))

#11
def odd_values_string(str):
    result = ""
    for i in range(len(str)):
        if i % 2 == 0:
            result = result + str[i]
    return result
print(odd_values_string('alphabet'))
print(odd_values_string('python'))

#12
def word_count(str):
    counts = dict()
    words = str.split()
    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1
    return counts
print( word_count('the quick brown fox jumps over the lazy dog.'))

#13
user_input = input("What's your favorite language? ")
print("My favorite language is ", user_input.upper())
print("My favorite language is ", user_input.lower())

#14
items = input("Input comma-separated sequence of words")
words = [word for word in items.split(",")]
print(",".join(sorted(list(set(words)))))

#15
def add_tags(tag, word):
    return "<%s>%s</%s>" % (tag, word, tag)
print(add_tags('i', 'Python'))
print(add_tags('b', 'Python Tutorial'))

#16
def insert_string_middle(str, word):
    return str[:2] + word + str[2:]
print(insert_string_middle('[[]]', 'Python'))
print(insert_string_middle('{{}}', 'PHP'))
print(insert_string_middle('<<>>', 'HTML'))

#17
def insert_end(str):
    sub_str = str[-2:]
    return sub_str * 4
print(insert_end('Python'))
print(insert_end('Exercises'))

#18
def first_three(str):
    if len(str) > 3:
        return str[:3]
    else:
        return str
print(first_three('ipy'))
print(first_three('python'))
print(first_three('py'))

#19
str1 = 'https://www.w3resource.com/python-exercises/string'
print(str1.rsplit('/', 1)[0])
print(str1.rsplit('-', 1)[0])

#20
def reverse_string(str1):
    if len(str1) % 4 == 0:
        return ''.join(reversed(str1))
    return str1
print(reverse_string('abcd'))
print(reverse_string('python'))
